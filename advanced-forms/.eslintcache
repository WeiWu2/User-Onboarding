[{"C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\index.js":"1","C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\reportWebVitals.js":"2","C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\App.js":"3","C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\component\\Form.js":"4","C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\validate\\schema.js":"5","C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\component\\User.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2116,"mtime":1611794560062,"results":"10","hashOfConfig":"8"},{"size":1751,"mtime":1611894868515,"results":"11","hashOfConfig":"8"},{"size":574,"mtime":1611789166635,"results":"12","hashOfConfig":"8"},{"size":329,"mtime":1611895060236,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hev17a",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\index.js",[],["28","29"],"C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\reportWebVitals.js",[],"C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\App.js",["30"],"import logo from './logo.svg';\nimport './App.css';\nimport Form from './component/Form'\nimport React, {useState, useEffect} from 'react';\nimport * as yup from 'yup';\nimport Schema from './validate/schema'\nimport axios from \"axios\"\nimport User from './component/User'\nconst initialFormValues = {\n  name:\"\",\n  email:\"\",\n  password:'',\n  tos:false\n}\nconst initialFormErrors = {\n  name: '',\n  email: '',\n  password: '',\n  tos: '',\n}\nconst initialUsers = [\n  // {name: \"Wei\", email: \"wei@gmail.com\", password:\"why would I should password\", tos:true},\n  // {name: \"Wei2\", email: \"wei2@gmail.com\", password:\"why would I should password\", tos:true}\n];\nconst initialDisabled = true\n\n\nfunction App() {\n  const [user,setUser] = useState(initialUsers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors) \n  const [disabled, setDisabled] = useState(initialDisabled)     \n\n  \nconst onSubmit = () => {\n    const newUser = {\n      name: formValues.name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      tos:true\n    }\n    postNewUser(newUser);\n  }\n\n  const postNewUser = newUser => {\n  \n    axios.post('https://reqres.in/api/users', newUser)\n    .then((res) => {\n      setUser([res.data, ...user])\n    })\n    setFormValues(initialFormValues);\n  }\n\n\nconst onChange = (name, value) => {\n  yup.reach(Schema, name)\n  .validate(value)\n  .then(() => {\n    setFormErrors({...formErrors,\n    [name]: ''})\n  })\n  .catch((err) => {\n    setFormErrors({\n      ...formErrors,\n      [name]: err.errors[0]\n    })\n  })\n  setFormValues({\n    ...formValues,\n    [name]: value \n  })\n}\n  \n\nuseEffect(() => {\n  Schema.isValid(formValues).then((valid) => {\n    setDisabled(!valid)\n  })\n}, [formValues])\n\n  return (\n    <div >\n      <Form formValues={formValues} submit={onSubmit} change={onChange} disabled={disabled}\n        errors={formErrors}/>\n\n\n         {\n        user.map(user => {\n          return (\n            <User key={user.id} details={user} />\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\component\\Form.js",[],"C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\validate\\schema.js",[],"C:\\Users\\Bansa\\Desktop\\Lambda\\Unit2-Sprint3\\User-Onboarding\\advanced-forms\\src\\component\\User.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]